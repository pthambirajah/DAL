@model DTO.Credentials

@{
    ViewData["Title"] = "Login";
}

<h2>Login</h2>
@using (Html.BeginForm("Index", "Credentials", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.ValidationSummary(true)

    <div class="form-group">
        <label class="col-sm-2">Username</label>
        <div class="col-sm-2">
            @Html.TextBoxFor(m => m.username, new { @class = "form-control", placeholder = "username" })
            @Html.ValidationMessageFor(m => m.username)
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2">Password</label>
        <div class="col-sm-2">
            @Html.TextBoxFor(m => m.password, new { @class = "form-control", placeholder = "password", type = "password", id = "inputPwd" })
            @Html.ValidationMessageFor(m => m.password)
            <input type="checkbox" onclick="myFunction()">Show Password
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-4">
            <button type="submit" class="btn btn-primary btn-lg">Log in</button>
        </div>
    </div>

}

<script>
    function myFunction() {
        var x = document.getElementById("inputPwd");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }
</script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.min.js"></script>
